"use strict";const diarization_default_options={host:"https://cp.speechpro.com/vkdiarization/rest/",bufferSize:2048,numChannels:1,sampleRate:16e3};class SpeechProDiarization{constructor(e){this.options={host:e.host||diarization_default_options.host,recorder:e.recorder||!1},this.session_id=null;let t=this;e.client&&"object"==typeof e.client&&t.createSession(e.client).then(function(e){t.options.recorder&&t.recorder(),t.session_id=e.session_id;try{t.complete(t.session_id)}catch(e){}}).catch(function(e){try{t.error(e)}catch(e){}})}ajax(e,t,n,i,s){return new Promise(function(o,r){let a=new XMLHttpRequest;if(a.open(e,t,n),"object"==typeof s)for(let e in s)a.setRequestHeader(e,s[e]);a.onreadystatechange=function(){if(4==this.readyState)if(200==this.status)try{o(JSON.parse(this.responseText))}catch(e){r(e)}else r(this)},a.send(JSON.stringify(i))})}createSession(e){return this.ajax("POST",this.options.host+"session",!0,e,{"Content-type":"application/json;charset=UTF-8"})}checkSession(){return this.ajax("GET",this.options.host+"session",!0,null,{"Content-type":"application/json;charset=UTF-8","X-Session-Id":this.session_id})}closeSession(){return this.ajax("DELETE",this.options.host+"session",!0,null,{"Content-type":"application/json;charset=UTF-8","X-Session-Id":this.session_id})}diarization(e){let t=this,n=new FileReader;n.readAsDataURL(e),n.onloadend=function(e){t.ajax("POST",t.options.host+"v1/diarization",!0,{audio:{data:e.target.result.split(",")[1],mime:"audio/s16be"}},{"Content-type":"application/json;charset=UTF-8","X-Session-Id":t.session_id}).then(function(e){try{t.diarizationComplete(e)}catch(e){}}).catch(function(e){try{t.diarizationError(e)}catch(e){}})}}recorder(){let e=this;return new Promise(function(t,n){e.options.bufferSize=diarization_default_options.bufferSize,e.options.numChannels=diarization_default_options.numChannels,e.options.sampleRate=diarization_default_options.sampleRate,e.getUserMedia=navigator.getUserMedia||navigator.mozGetUserMedia||navigator.msGetUserMedia||navigator.webkitGetUserMedia,e.mediaDevices=navigator.mediaDevices&&navigator.mediaDevices.getUserMedia?navigator.mediaDevices:e.getUserMedia?{getUserMedia:function(t){return new Promise(function(n,i){e.getUserMedia.call(navigator,t,n,i)})}}:null,e.mediaDevices.getUserMedia({audio:!0}).then(function(n){let i=window.AudioContext||window.webkitAudioContext;e.context=new i,e.source=e.context.createMediaStreamSource(n),e.sampleRate=e.context.sampleRate,null==e.context.createScriptProcessor&&(e.context.createScriptProcessor=e.context.createJavaScriptNode),e.volume=e.context.createGain(),e.source.connect(e.volume),e.options.recorder=!0,t(n)}).catch(function(e){n(e)})})}startRecord(){let e=this;e.isRecording()?console.info("startRecording: previous recording is running"):e.options.recorder?(e.leftchannel=[],e.rightchannel=[],e.recordingLength=0,e.processor=e.context.createScriptProcessor(e.options.bufferSize,2,2),e.processor.onaudioprocess=function(t){let n=t.inputBuffer.getChannelData(0),i=t.inputBuffer.getChannelData(1);e.leftchannel.push(new Float32Array(n)),e.rightchannel.push(new Float32Array(i)),e.recordingLength+=e.options.bufferSize},e.volume.connect(e.processor),e.processor.connect(e.context.destination)):console.info("startRecording: recorder is not initialized")}stopRecord(){this.isRecording()?(this.volume.disconnect(),this.processor.disconnect(),delete this.processor,this.encodeWav()):console.info("finishRecording: no recording is running")}isRecording(){return null!=this.processor}mergeBuffers(e,t){let n=new Float32Array(t),i=0,s=e.length;for(let t=0;t<s;t++){let s=e[t];n.set(s,i),i+=s.length}return n}interleave(e,t){let n=e.length+t.length,i=new Float32Array(n),s=0;for(let o=0;o<n;)i[o++]=e[s],i[o++]=t[s],s++;return i}writeUTFBytes(e,t,n){let i=n.length;for(let s=0;s<i;s++)e.setUint8(t+s,n.charCodeAt(s))}downSampleBuffer(e,t){if(t==this.sampleRate)return e;t>this.sampleRate&&console.info("downsampling rate show be smaller than original sample rate");let n=this.sampleRate/t,i=Math.round(e.length/n),s=new Float32Array(i),o=0,r=0;for(;o<s.length;){let t=Math.round((o+1)*n),i=0,a=0;for(let n=r;n<t&&n<e.length;n++)i+=e[n],a++;s[o]=i/a,o++,r=t}return s}encodeWav(){let e=this.mergeBuffers(this.leftchannel,this.recordingLength),t=this.mergeBuffers(this.rightchannel,this.recordingLength);e=this.downSampleBuffer(e,this.options.sampleRate),t=this.downSampleBuffer(t,this.options.sampleRate);let n=this.options.numChannels>1?this.interleave(e,t):e,i=new ArrayBuffer(44+2*n.length),s=new DataView(i);this.writeUTFBytes(s,0,"RIFF"),s.setUint32(4,44+2*n.length,!0),this.writeUTFBytes(s,8,"WAVE"),this.writeUTFBytes(s,12,"fmt "),s.setUint32(16,16,!0),s.setUint16(20,1,!0),s.setUint16(22,this.options.numChannels,!0),s.setUint32(24,this.options.sampleRate,!0),s.setUint32(28,4*this.options.sampleRate,!0),s.setUint16(32,4,!0),s.setUint16(34,16,!0),this.writeUTFBytes(s,36,"data"),s.setUint32(40,2*n.length,!0);let o=n.length,r=44;for(let e=0;e<o;e++)s.setInt16(r,32767*n[e],!0),r+=2;this.diarization(new Blob([s],{type:"audio/x-wav"}))}}